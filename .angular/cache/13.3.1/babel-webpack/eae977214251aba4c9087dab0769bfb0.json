{"ast":null,"code":"import _classCallCheck from \"D:\\\\material-dashboard-angular2-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\material-dashboard-angular2-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from \"@angular/core\";\nimport * as Chartist from \"chartist\";\n\nvar DashboardComponent = /*#__PURE__*/function () {\n  function DashboardComponent() {\n    _classCallCheck(this, DashboardComponent);\n  }\n\n  _createClass(DashboardComponent, [{\n    key: \"startAnimationForLineChart\",\n    value: function startAnimationForLineChart(chart) {\n      var seq, delays, durations;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n      chart.on(\"draw\", function (data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      });\n      seq = 0;\n    }\n  }, {\n    key: \"startAnimationForBarChart\",\n    value: function startAnimationForBarChart(chart) {\n      var seq2, delays2, durations2;\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on(\"draw\", function (data) {\n        if (data.type === \"bar\") {\n          seq2++;\n          data.element.animate({\n            opacity: {\n              begin: seq2 * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      });\n      seq2 = 0;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\n      var dataDailySalesChart = {\n        labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n        series: [[12, 17, 7, 17, 23, 18, 38]]\n      };\n      var optionsDailySalesChart = {\n        lineSmooth: Chartist.Interpolation.cardinal({\n          tension: 0\n        }),\n        low: 0,\n        high: 50,\n        chartPadding: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        }\n      };\n      var dailySalesChart = new Chartist.Line(\"#dailySalesChart\", dataDailySalesChart, optionsDailySalesChart);\n      this.startAnimationForLineChart(dailySalesChart);\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\n\n      var dataCompletedTasksChart = {\n        labels: [\"12p\", \"3p\", \"6p\", \"9p\", \"12p\", \"3a\", \"6a\", \"9a\"],\n        series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n      };\n      var optionsCompletedTasksChart = {\n        lineSmooth: Chartist.Interpolation.cardinal({\n          tension: 0\n        }),\n        low: 0,\n        high: 1000,\n        chartPadding: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        }\n      };\n      var completedTasksChart = new Chartist.Line(\"#completedTasksChart\", dataCompletedTasksChart, optionsCompletedTasksChart); // start animation for the Completed Tasks Chart - Line Chart\n\n      this.startAnimationForLineChart(completedTasksChart);\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\n\n      var datawebsiteViewsChart = {\n        labels: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n        series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n      };\n      var optionswebsiteViewsChart = {\n        axisX: {\n          showGrid: false\n        },\n        low: 0,\n        high: 1000,\n        chartPadding: {\n          top: 0,\n          right: 5,\n          bottom: 0,\n          left: 0\n        }\n      };\n      var responsiveOptions = [[\"screen and (max-width: 640px)\", {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function labelInterpolationFnc(value) {\n            return value[0];\n          }\n        }\n      }]];\n      var websiteViewsChart = new Chartist.Bar(\"#websiteViewsChart\", datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions); //start animation for the Emails Subscription Chart\n\n      this.startAnimationForBarChart(websiteViewsChart);\n    }\n  }]);\n\n  return DashboardComponent;\n}();\n\nDashboardComponent = __decorate([Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n}), __metadata(\"design:paramtypes\", [])], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"sources":["D:/material-dashboard-angular2-master/src/app/dashboard/dashboard.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","Component","Chartist","DashboardComponent","chart","seq","delays","durations","on","data","type","element","animate","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","seq2","delays2","durations2","dataDailySalesChart","labels","series","optionsDailySalesChart","lineSmooth","Interpolation","cardinal","tension","low","high","chartPadding","top","right","bottom","left","dailySalesChart","Line","startAnimationForLineChart","dataCompletedTasksChart","optionsCompletedTasksChart","completedTasksChart","datawebsiteViewsChart","optionswebsiteViewsChart","axisX","showGrid","responsiveOptions","seriesBarDistance","labelInterpolationFnc","value","websiteViewsChart","Bar","startAnimationForBarChart","selector","templateUrl","styleUrls"],"mappings":";;;AAAA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,MAAI,OAAON,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;;AAGA,SAASE,SAAT,QAA0B,eAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;AACA,IAAIC,kBAAkB;AAClB,gCAAc;AAAA;AAAG;;AADC;AAAA;AAAA,WAElB,oCAA2BC,KAA3B,EAAkC;AAC9B,UAAIC,GAAJ,EAASC,MAAT,EAAiBC,SAAjB;AACAF,MAAAA,GAAG,GAAG,CAAN;AACAC,MAAAA,MAAM,GAAG,EAAT;AACAC,MAAAA,SAAS,GAAG,GAAZ;AACAH,MAAAA,KAAK,CAACI,EAAN,CAAS,MAAT,EAAiB,UAAUC,IAAV,EAAgB;AAC7B,YAAIA,IAAI,CAACC,IAAL,KAAc,MAAd,IAAwBD,IAAI,CAACC,IAAL,KAAc,MAA1C,EAAkD;AAC9CD,UAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqB;AACjBpB,YAAAA,CAAC,EAAE;AACCqB,cAAAA,KAAK,EAAE,GADR;AAECC,cAAAA,GAAG,EAAE,GAFN;AAGCC,cAAAA,IAAI,EAAEN,IAAI,CAACO,IAAL,CACDC,KADC,GAEDC,KAFC,CAEK,CAFL,EAEQ,CAFR,EAGDC,SAHC,CAGS,CAHT,EAGYV,IAAI,CAACW,SAAL,CAAeC,MAAf,EAHZ,EAIDC,SAJC,EAHP;AAQCC,cAAAA,EAAE,EAAEd,IAAI,CAACO,IAAL,CAAUC,KAAV,GAAkBK,SAAlB,EARL;AASCE,cAAAA,MAAM,EAAEtB,QAAQ,CAACuB,GAAT,CAAaC,MAAb,CAAoBC;AAT7B;AADc,WAArB;AAaH,SAdD,MAeK,IAAIlB,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;AAC5BL,UAAAA,GAAG;AACHI,UAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqB;AACjBgB,YAAAA,OAAO,EAAE;AACLf,cAAAA,KAAK,EAAER,GAAG,GAAGC,MADR;AAELQ,cAAAA,GAAG,EAAEP,SAFA;AAGLQ,cAAAA,IAAI,EAAE,CAHD;AAILQ,cAAAA,EAAE,EAAE,CAJC;AAKLC,cAAAA,MAAM,EAAE;AALH;AADQ,WAArB;AASH;AACJ,OA5BD;AA6BAnB,MAAAA,GAAG,GAAG,CAAN;AACH;AArCiB;AAAA;AAAA,WAsClB,mCAA0BD,KAA1B,EAAiC;AAC7B,UAAIyB,IAAJ,EAAUC,OAAV,EAAmBC,UAAnB;AACAF,MAAAA,IAAI,GAAG,CAAP;AACAC,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,UAAU,GAAG,GAAb;AACA3B,MAAAA,KAAK,CAACI,EAAN,CAAS,MAAT,EAAiB,UAAUC,IAAV,EAAgB;AAC7B,YAAIA,IAAI,CAACC,IAAL,KAAc,KAAlB,EAAyB;AACrBmB,UAAAA,IAAI;AACJpB,UAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqB;AACjBgB,YAAAA,OAAO,EAAE;AACLf,cAAAA,KAAK,EAAEgB,IAAI,GAAGC,OADT;AAELhB,cAAAA,GAAG,EAAEiB,UAFA;AAGLhB,cAAAA,IAAI,EAAE,CAHD;AAILQ,cAAAA,EAAE,EAAE,CAJC;AAKLC,cAAAA,MAAM,EAAE;AALH;AADQ,WAArB;AASH;AACJ,OAbD;AAcAK,MAAAA,IAAI,GAAG,CAAP;AACH;AA1DiB;AAAA;AAAA,WA2DlB,oBAAW;AACP;AACA,UAAMG,mBAAmB,GAAG;AACxBC,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CADgB;AAExBC,QAAAA,MAAM,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,CAAD;AAFgB,OAA5B;AAIA,UAAMC,sBAAsB,GAAG;AAC3BC,QAAAA,UAAU,EAAElC,QAAQ,CAACmC,aAAT,CAAuBC,QAAvB,CAAgC;AACxCC,UAAAA,OAAO,EAAE;AAD+B,SAAhC,CADe;AAI3BC,QAAAA,GAAG,EAAE,CAJsB;AAK3BC,QAAAA,IAAI,EAAE,EALqB;AAM3BC,QAAAA,YAAY,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE,CAAjB;AAAoBC,UAAAA,MAAM,EAAE,CAA5B;AAA+BC,UAAAA,IAAI,EAAE;AAArC;AANa,OAA/B;AAQA,UAAIC,eAAe,GAAG,IAAI7C,QAAQ,CAAC8C,IAAb,CAAkB,kBAAlB,EAAsChB,mBAAtC,EAA2DG,sBAA3D,CAAtB;AACA,WAAKc,0BAAL,CAAgCF,eAAhC;AACA;;AACA,UAAMG,uBAAuB,GAAG;AAC5BjB,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,EAA0B,KAA1B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,IAA7C,CADoB;AAE5BC,QAAAA,MAAM,EAAE,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAD;AAFoB,OAAhC;AAIA,UAAMiB,0BAA0B,GAAG;AAC/Bf,QAAAA,UAAU,EAAElC,QAAQ,CAACmC,aAAT,CAAuBC,QAAvB,CAAgC;AACxCC,UAAAA,OAAO,EAAE;AAD+B,SAAhC,CADmB;AAI/BC,QAAAA,GAAG,EAAE,CAJ0B;AAK/BC,QAAAA,IAAI,EAAE,IALyB;AAM/BC,QAAAA,YAAY,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE,CAAjB;AAAoBC,UAAAA,MAAM,EAAE,CAA5B;AAA+BC,UAAAA,IAAI,EAAE;AAArC;AANiB,OAAnC;AAQA,UAAIM,mBAAmB,GAAG,IAAIlD,QAAQ,CAAC8C,IAAb,CAAkB,sBAAlB,EAA0CE,uBAA1C,EAAmEC,0BAAnE,CAA1B,CA7BO,CA8BP;;AACA,WAAKF,0BAAL,CAAgCG,mBAAhC;AACA;;AACA,UAAIC,qBAAqB,GAAG;AACxBpB,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CADgB;AAExBC,QAAAA,MAAM,EAAE,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAAD;AAFgB,OAA5B;AAIA,UAAIoB,wBAAwB,GAAG;AAC3BC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE;AADP,SADoB;AAI3BhB,QAAAA,GAAG,EAAE,CAJsB;AAK3BC,QAAAA,IAAI,EAAE,IALqB;AAM3BC,QAAAA,YAAY,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE,CAAjB;AAAoBC,UAAAA,MAAM,EAAE,CAA5B;AAA+BC,UAAAA,IAAI,EAAE;AAArC;AANa,OAA/B;AAQA,UAAIW,iBAAiB,GAAG,CACpB,CACI,+BADJ,EAEI;AACIC,QAAAA,iBAAiB,EAAE,CADvB;AAEIH,QAAAA,KAAK,EAAE;AACHI,UAAAA,qBAAqB,EAAE,+BAAUC,KAAV,EAAiB;AACpC,mBAAOA,KAAK,CAAC,CAAD,CAAZ;AACH;AAHE;AAFX,OAFJ,CADoB,CAAxB;AAaA,UAAIC,iBAAiB,GAAG,IAAI3D,QAAQ,CAAC4D,GAAb,CAAiB,oBAAjB,EAAuCT,qBAAvC,EAA8DC,wBAA9D,EAAwFG,iBAAxF,CAAxB,CA1DO,CA2DP;;AACA,WAAKM,yBAAL,CAA+BF,iBAA/B;AACH;AAxHiB;;AAAA;AAAA,GAAtB;;AA0HA1D,kBAAkB,GAAGtB,UAAU,CAAC,CAC5BoB,SAAS,CAAC;AACN+D,EAAAA,QAAQ,EAAE,eADJ;AAENC,EAAAA,WAAW,EAAE,4BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,2BAAD;AAHL,CAAD,CADmB,EAM5BrE,UAAU,CAAC,mBAAD,EAAsB,EAAtB,CANkB,CAAD,EAO5BM,kBAP4B,CAA/B;AAQA,SAASA,kBAAT","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from \"@angular/core\";\r\nimport * as Chartist from \"chartist\";\r\nlet DashboardComponent = class DashboardComponent {\r\n    constructor() { }\r\n    startAnimationForLineChart(chart) {\r\n        let seq, delays, durations;\r\n        seq = 0;\r\n        delays = 80;\r\n        durations = 500;\r\n        chart.on(\"draw\", function (data) {\r\n            if (data.type === \"line\" || data.type === \"area\") {\r\n                data.element.animate({\r\n                    d: {\r\n                        begin: 600,\r\n                        dur: 700,\r\n                        from: data.path\r\n                            .clone()\r\n                            .scale(1, 0)\r\n                            .translate(0, data.chartRect.height())\r\n                            .stringify(),\r\n                        to: data.path.clone().stringify(),\r\n                        easing: Chartist.Svg.Easing.easeOutQuint,\r\n                    },\r\n                });\r\n            }\r\n            else if (data.type === \"point\") {\r\n                seq++;\r\n                data.element.animate({\r\n                    opacity: {\r\n                        begin: seq * delays,\r\n                        dur: durations,\r\n                        from: 0,\r\n                        to: 1,\r\n                        easing: \"ease\",\r\n                    },\r\n                });\r\n            }\r\n        });\r\n        seq = 0;\r\n    }\r\n    startAnimationForBarChart(chart) {\r\n        let seq2, delays2, durations2;\r\n        seq2 = 0;\r\n        delays2 = 80;\r\n        durations2 = 500;\r\n        chart.on(\"draw\", function (data) {\r\n            if (data.type === \"bar\") {\r\n                seq2++;\r\n                data.element.animate({\r\n                    opacity: {\r\n                        begin: seq2 * delays2,\r\n                        dur: durations2,\r\n                        from: 0,\r\n                        to: 1,\r\n                        easing: \"ease\",\r\n                    },\r\n                });\r\n            }\r\n        });\r\n        seq2 = 0;\r\n    }\r\n    ngOnInit() {\r\n        /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\r\n        const dataDailySalesChart = {\r\n            labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\r\n            series: [[12, 17, 7, 17, 23, 18, 38]],\r\n        };\r\n        const optionsDailySalesChart = {\r\n            lineSmooth: Chartist.Interpolation.cardinal({\r\n                tension: 0,\r\n            }),\r\n            low: 0,\r\n            high: 50,\r\n            chartPadding: { top: 0, right: 0, bottom: 0, left: 0 },\r\n        };\r\n        var dailySalesChart = new Chartist.Line(\"#dailySalesChart\", dataDailySalesChart, optionsDailySalesChart);\r\n        this.startAnimationForLineChart(dailySalesChart);\r\n        /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\r\n        const dataCompletedTasksChart = {\r\n            labels: [\"12p\", \"3p\", \"6p\", \"9p\", \"12p\", \"3a\", \"6a\", \"9a\"],\r\n            series: [[230, 750, 450, 300, 280, 240, 200, 190]],\r\n        };\r\n        const optionsCompletedTasksChart = {\r\n            lineSmooth: Chartist.Interpolation.cardinal({\r\n                tension: 0,\r\n            }),\r\n            low: 0,\r\n            high: 1000,\r\n            chartPadding: { top: 0, right: 0, bottom: 0, left: 0 },\r\n        };\r\n        var completedTasksChart = new Chartist.Line(\"#completedTasksChart\", dataCompletedTasksChart, optionsCompletedTasksChart);\r\n        // start animation for the Completed Tasks Chart - Line Chart\r\n        this.startAnimationForLineChart(completedTasksChart);\r\n        /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\r\n        var datawebsiteViewsChart = {\r\n            labels: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n            series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]],\r\n        };\r\n        var optionswebsiteViewsChart = {\r\n            axisX: {\r\n                showGrid: false,\r\n            },\r\n            low: 0,\r\n            high: 1000,\r\n            chartPadding: { top: 0, right: 5, bottom: 0, left: 0 },\r\n        };\r\n        var responsiveOptions = [\r\n            [\r\n                \"screen and (max-width: 640px)\",\r\n                {\r\n                    seriesBarDistance: 5,\r\n                    axisX: {\r\n                        labelInterpolationFnc: function (value) {\r\n                            return value[0];\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        ];\r\n        var websiteViewsChart = new Chartist.Bar(\"#websiteViewsChart\", datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\r\n        //start animation for the Emails Subscription Chart\r\n        this.startAnimationForBarChart(websiteViewsChart);\r\n    }\r\n};\r\nDashboardComponent = __decorate([\r\n    Component({\r\n        selector: \"app-dashboard\",\r\n        templateUrl: \"./dashboard.component.html\",\r\n        styleUrls: [\"./dashboard.component.css\"],\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], DashboardComponent);\r\nexport { DashboardComponent };\r\n"]},"metadata":{},"sourceType":"module"}